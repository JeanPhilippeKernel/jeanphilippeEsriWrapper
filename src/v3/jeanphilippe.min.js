"use strict"; var jeanphilippe = { Init: () => { console.log("[+] jeanphilippe.js was well initiated.....") } }; jeanphilippe.Helpers = { Get: (a, b) => { return new Promise((c, d) => { null !== b && b !== void 0 ? $.get(a, b).done(f => c(f)).fail(f => d(f)) : $.get(a).done(f => c(f)).fail(f => d(f)) }) }, GetJson: (a, b) => { return new Promise((c, d) => { null !== b && b !== void 0 ? $.getJSON(a, b).done(f => c(f)).fail(f => d(f)) : $.getJSON(a).done(f => c(f)).fail(f => d(f)) }) }, Post: (a, b) => { if (null !== b && b !== void 0) return new Promise((c, d) => { $.post(a, b).done(f => c(f)).fail(f => d(f)) }); throw new Error("Unable to do post operation with no datas parameter\nCheck the param's parameter value") }, EnableElement: a => { "object" == typeof a && a.hasOwnProperty("length") ? $.each(a, (b, c) => { ("disabled" === $(c).prop("disabled") || "" === $(c).prop("disabled")) && $(c).removeProp("disabled") }) : ("disabled" === $(e).prop("disabled") || "" === $(e).prop("disabled")) && $(e).removeProp("disabled") }, DisableElement: a => { "object" == typeof a && a.hasOwnProperty("length") ? $.each(a, (b, c) => { "disabled" !== $(c).prop("disabled") && $(c).prop("disabled", "disabled") }) : "disabled" !== $(e).prop("disabled") && $(e).prop("disabled", "disabled") } }, jeanphilippe.Map = { CreateMap: (a, b, c) => { let d = null; b = b === void 0 || null === b ? { center: [-118, 34.5], zoom: 8, basemap: "topo" } : b, "function" == typeof c ? require(["esri/map"], f => { d = new f(a, b), c(d) }) : "null" == typeof c ? require(["esri/map"], f => { d = new f(a, b) }) : console.error("[!] CreateMap method must have a callback function..") }, DestroyMap: a => { "null" != typeof a && "undefined" != typeof a ? a.destroy() : console.error("[!] the object map isn't defined...") }, CenterMap: (a, b, c) => { require(["esri/geometry/Point"], d => { let f = new d(b); null !== c && c !== void 0 ? a.centerAndZoom(f, c) : a.centerAt(f) }) }, CreateMapExtent: (a, b, c, d, f, g) => { let h = null; "null" != typeof a && "undefined" != typeof a && "null" != typeof b && "undefined" != typeof b && "null" != typeof c && "undefined" != typeof c && "null" != typeof d && "undefined" != typeof d && "null" != typeof f && "undefined" != typeof f && "function" != typeof g ? require(["esri/geometry/Extent"], j => { h = new j(a, b, c, d, f), g(h) }) : console.error("[!] We're unable to create an Extent's object") }, CreateMapExtentByJSON: (a, b) => { let c = null; "null" != typeof a && "undefined" != typeof a && "function" == typeof b ? require(["esri/geometry/Extent"], d => { c = new d(a), b(c) }) : console.error("[!] We're unable to create an Extent's object") }, CreateMapSpatialReference: (a, b) => { let c = null; null !== a && a !== void 0 && "function" == typeof b ? require(["esri/SpatialReference"], d => { c = new d(a), b(c) }) : console.error("[!] the spatial reference and/or the callback function isn't defined") }, AddMapLayer: (a, b) => { "null" != typeof a && "undefined" != typeof a && "null" != typeof b && "undefined" != typeof b ? a.addLayer(b) : console.error("[!] map instance and/or layer isn't defined...") }, AddMapLayerArray: (a, b) => { "null" != typeof a && "undefined" != typeof a && "null" != typeof b && "undefined" != typeof b ? a.addLayers(b) : console.error("[!] map instance and/or layers isn't defined...") }, RemoveMapLayer: (a, b) => { "null" != typeof a && "undefined" != typeof a && "null" != typeof b && "undefined" != typeof b ? a.removeLayer(b) : console.error("[!] map instance and/or layer isn't defined...") }, RemoveMapAllLayers: a => { return "null" != typeof a && "undefined" != typeof a ? a.removeAllLayers() : void console.error("[!] this map instance isn't defined...") }, GetMapGraphicLayersIdsArray: a => { return "null" != typeof a && "undefined" != typeof a ? a.graphicsLayerIds : void console.error("[!] this map instance isn't defined...") }, GetMapLayerById: (a, b) => { return "null" != typeof a && "undefined" != typeof a ? a.getLayer(b) : void console.error("[!] this map instance isn't defined...") }, GetMapLayerIdsArray: a => { return "null" != typeof a && "undefined" != typeof a ? a.layerIds : void console.error("[!] this map instance isn't defined...") }, GetMapBackgroundColor: a => { return "null" != typeof a && "undefined" != typeof a ? a.backgroundColor : void console.error("[!] this map instance isn't defined...") }, GetMapSpatialReference: a => { return "null" != typeof a && "undefined" != typeof a ? a.spatialReference : void console.error("[!] this map instance isn't defined...") }, GetMapTimeExtent: () => { return "null" != typeof mapObject && "undefined" != typeof mapObject ? mapObject.timeExtent : void console.error("[!] this map instance isn't defined...") }, GetMapExtent: a => { return "null" != typeof a && "undefined" != typeof a ? a.extent : void console.error("[!] this map instance isn't defined...") }, GetMapVisibility: a => { return "null" != typeof a && "undefined" != typeof a ? a.visible : void console.error("[!] this map instance isn't defined...") }, GetMapBasemap: a => { return "null" != typeof a && "undefined" != typeof a ? a.getBasemap() : void console.error("[!] this map instance isn't defined...") }, GetMapZoom: a => { return "null" != typeof a && "undefined" != typeof a ? a.getZoom() : void console.error("[!] this map instance isn't defined...") }, GetMapMinZoom: a => { return "null" != typeof a && "undefined" != typeof a ? a.getMinZoom() : void console.error("[!] this map instance isn't defined...") }, GetMapMaxZoom: a => { return "null" != typeof a && "undefined" != typeof a ? a.getMaxZoom() : void console.error("[!] this map instance isn't defined...") }, GetMapScale: a => { return "null" != typeof a && "undefined" != typeof a ? a.getScale() : void console.error("[!] this map instance isn't defined...") }, GetMapMinScale: a => { return "null" != typeof a && "undefined" != typeof a ? a.getMinScale() : void console.error("[!] this map instance isn't defined...") }, GetMapMaxScale: a => { return "null" != typeof a && "undefined" != typeof a ? a.getMaxScale() : void console.error("[!] this map instance isn't defined...") }, GetMapLevel: a => { return "null" != typeof a && "undefined" != typeof a ? a.getLevel() : void console.error("[!] this map instance isn't defined...") }, SetMapVisibility: (a, b) => { null !== a && a !== void 0 && null !== b && b !== void 0 && "boolean" == typeof b && a.setVisibility(b) }, SetMapBackgroundColor: (a, b) => { null !== a && a !== void 0 && null !== b && b !== void 0 ? a.setBackgroundColor(b) : console.error("[!] map instance and/or value isn't defined...") }, SetMapZoom: (a, b) => { if (null !== a && a !== void 0 && null !== b && b !== void 0) { let c = a.setZoom(b); c.then(() => console.log("set zoom successed..."), d => console.error("error occured while setting zoom : ", d), () => console.log("set zoom in progress...")) } else console.error("[!] map instance and/or value isn't defined...") }, SetMapScale: (a, b) => { if (null !== a && a !== void 0 && null !== b && b !== void 0) { let c = a.setScale(b); c.then(() => console.log("set scale successed..."), d => console.error("error occured while setting scale : ", d), () => console.log("set scale in progress...")) } else console.error("[!] map instance and/or value isn't defined...") }, SetMapLevel: (a, b) => { if (null !== a && a !== void 0 && null !== b && b !== void 0) { let c = a.SetMapLevel(b); c.then(() => console.log("set level successed..."), d => console.error("error occured while setting level : ", d), () => console.log("set level in progress...")) } else console.error("[!] map instance and/or value isn't defined...") }, SetMapExtent: (a, b) => { if (null !== a && a !== void 0 && null !== b && b !== void 0) { let c = a.setExtent(b); c.then(() => console.log("set extent successed..."), d => console.error("error occured while setting extent : ", d), () => console.log("set extent in progress...")) } else console.error("[!] map instance and/or value isn't defined...") } }, jeanphilippe.Layers = { CreateDynamicMapServiceLayer: (a, b, c) => { let d = null; b = b === void 0 || null === b ? { id: "defaultService" } : b, "function" == typeof c ? require(["esri/layers/ArcGISDynamicMapServiceLayer"], f => { d = new f(a, b), c(d) }) : console.error("[!] the CreateDynamicMapServiceLayer method must have defined callback function") }, CreateImageServiceLayer: () => { }, CreateImageServiceVectorLayer: () => { }, CreateTiledMapServiceLayer: () => { }, CreateFeatureLayer: () => { }, CreateGraphicLayer: () => { }, CreateMapImageLayer: () => { } }, jeanphilippe.Symbols = {}, jeanphilippe.Tasks = {}, jeanphilippe.Map.Animation = {}, jeanphilippe.Init();
